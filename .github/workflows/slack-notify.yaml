name: Send Slack Notification
# See ../../slack/notify.md for documentation

on:
  workflow_call:
    inputs:
      project:
        required: false
        type: string
        default: ${{ github.repository }}
      message:
        required: false
        type: string
        default: ''
      channel-ids:
        required: true
        type: string
    secrets:
      SLACK_BOT_TOKEN:
        required: true


jobs:
  emojify:
    name: Turn Job Results into Emojis
    runs-on: ubuntu-latest

    outputs:
      text: ${{ steps.status.outputs.text }}

    steps:
      - id: status
        env:
          MESSAGE: ${{ inputs.message }}
        run: |
          cat > "${RUNNER_TEMP}/slack_emojify_commands.txt" <<CMD
          s/success/:heavy_check_mark:/g
          s/failure/:x:/g
          s/cancelled/:question:/g
          s/skipped/:question:/g
          CMD
          TEXT=$(echo "${MESSAGE}" | sed -f "${RUNNER_TEMP}/slack_emojify_commands.txt")
          echo "text<<MSG" >> $GITHUB_OUTPUT
          echo "$TEXT" >> $GITHUB_OUTPUT
          echo "MSG" >> $GITHUB_OUTPUT

  send:
    name: Send Slack Notification
    runs-on: ubuntu-latest
    needs: [emojify]

    steps:
      - name: Send notification to Slack
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ inputs.channel-ids }}
          slack-message: Status of CI Run for ${{ inputs.project }}  # message for notification pop-up
          payload: >
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Status of CI Run for ${{ inputs.project }}"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*"
                    },
                    {
                      "type": "plain_text",
                      "text": "${{ github.workflow }}",
                      "emoji": false
                    },
                    {
                      "type": "plain_text",
                      "text": "${{ github.head_ref || github.ref_name }}",
                      "emoji": false
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Run*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Attempt*"
                    },
                    {
                      "type": "plain_text",
                      "text": "${{ github.run_id }}",
                      "emoji": false
                    },
                    {
                      "type": "plain_text",
                      "text": "${{ github.run_attempt }}",
                      "emoji": false
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "plain_text",
                    "text": "${{ needs.emojify.outputs.text }}",
                    "emoji": true
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Workflow",
                        "emoji": false
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}//actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}"
                    }
                  ]
                }
              ]
            }
